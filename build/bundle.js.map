{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/svelte-canvas/src/forwardEvents.js","../../node_modules/svelte-canvas/src/Canvas.svelte","../../node_modules/svelte-canvas/src/Layer.svelte","../../node_modules/svelte/store/index.mjs","../../node_modules/svelte-canvas/src/timer.js","../../src/Field/FieldNode.svelte","../../src/CanvasObjects/Circle.svelte","../../src/Minions/MinionSource.svelte","../../src/Field/MinionPath.svelte","../../src/Minions/MinionSink.svelte","../../src/Minions/Minion.svelte","../../src/Minions/MinionLayer.svelte","../../src/CanvasObjects/Text.svelte","../../src/Game/FPS.svelte","../../src/Stores/state_store.js","../../src/Core/Field/FieldNode.js","../../src/Core/Field/FieldNodeCollection.js","../../src/Field/Field.svelte","../../src/Menu/BuildMenu.svelte","../../src/Menu/Menu.svelte","../../src/Core/Math/Vector.js","../../src/Core/Minion/Minion.js","../../src/Core/Minion/MinionCollection.js","../../src/Core/Game.js","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot_spread(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_spread_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_spread_changes_fn(dirty) | get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            const remove = [];\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j++];\n                if (!attributes[attribute.name]) {\n                    remove.push(attribute.name);\n                }\n            }\n            for (let k = 0; k < remove.length; k++) {\n                node.removeAttribute(remove[k]);\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    const z_index = (parseInt(computed_style.zIndex) || 0) - 1;\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        `overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: ${z_index};`);\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(anchor = null) {\n        this.a = anchor;\n        this.e = this.n = null;\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.h(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.31.0' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to seperate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_custom_elements_slots, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, update_slot, update_slot_spread, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// Adapted from https://github.com/hperrin/svelte-material-ui/blob/master/packages/common/forwardEvents.js\nimport { bubble, listen, current_component } from 'svelte/internal';\n\n// prettier-ignore\nconst events = [\n    'focus', 'blur',\n    'fullscreenchange', 'fullscreenerror', 'scroll',\n    'cut', 'copy', 'paste',\n    'keydown', 'keypress', 'keyup',\n    'auxclick', 'click', 'contextmenu', 'dblclick',\n    'mousedown', 'mouseenter', 'mouseleave', 'mousemove', 'mouseover', 'mouseout', 'mouseup',\n    'pointerlockchange', 'pointerlockerror', 'select', 'wheel',\n    'drag', 'dragend', 'dragenter', 'dragstart', 'dragleave', 'dragover', 'drop',\n    'touchcancel', 'touchend', 'touchmove', 'touchstart',\n    'pointerover', 'pointerenter', 'pointerdown', 'pointermove', 'pointerup', 'pointercancel', 'pointerout', 'pointerleave', \n    'gotpointercapture', 'lostpointercapture'\n  ];\n\nexport default function forwardEventsBuilder() {\n  const component = current_component;\n\n  return node => {\n    const destructors = events.map(event =>\n      listen(node, event, e => bubble(component, e))\n    );\n\n    return {\n      destroy: () => destructors.forEach(destroy => destroy())\n    };\n  };\n}\n","<script context=\"module\">\n  export const KEY = {};\n</script>\n\n<script>\n  import { onMount, onDestroy, setContext } from 'svelte';\n  import forwardEventsBuilder from './forwardEvents';\n\n  const forwardEvents = forwardEventsBuilder();\n\n  let canvas, context;\n\n  let redrawNeeded = true,\n    resizeNeeded = true,\n    resortNeeded = true;\n\n  let setups = [],\n    renderers = [],\n    prioritized = [];\n\n  export let width = 640,\n    height = 640,\n    pixelRatio = undefined,\n    style = null,\n    autoclear = true;\n\n  export const getCanvas = () => canvas,\n    getContext = () => context,\n    redraw = () => (redrawNeeded = true);\n\n  const resize = () => (resizeNeeded = true),\n    priorityChange = () => (resortNeeded = true);\n\n  const draw = () => {\n    if (resizeNeeded) {\n      context.scale(pixelRatio, pixelRatio);\n      resizeNeeded = false;\n    }\n\n    if (resortNeeded) {\n      prioritized = renderers\n        .map((renderer, i) => {\n          const rank = renderer.priority();\n          renderer.rank = rank || i - renderers.length;\n          return renderer;\n        })\n        .sort((a, b) => a.rank - b.rank);\n\n      resortNeeded = false;\n    }\n\n    if (setups.length !== 0) {\n      for (let setup of setups) {\n        setup({ context, width, height });\n        setups.splice(setups.indexOf(setup), 1);\n      }\n\n      redrawNeeded = true;\n    }\n\n    if (redrawNeeded) {\n      if (autoclear) {\n        context.clearRect(0, 0, width, height);\n      }\n\n      for (let { render } of prioritized) {\n        render({ context, width, height });\n      }\n\n      redrawNeeded = false;\n    }\n\n    window.requestAnimationFrame(draw);\n  };\n\n  const register = ({ setup, renderer }) => {\n    if (setup) setups.push(setup);\n\n    renderers.push(renderer);\n\n    onDestroy(() => {\n      renderers.splice(renderers.indexOf(renderer), 1);\n      priorityChange();\n      redraw();\n    });\n  };\n\n  setContext(KEY, { register, redraw, priorityChange });\n\n  if (pixelRatio === undefined) {\n    if (typeof window === 'undefined') {\n      pixelRatio = 2;\n    } else {\n      pixelRatio = window.devicePixelRatio;\n    }\n  }\n\n  onMount(() => {\n    context = canvas.getContext('2d');\n    draw();\n  });\n\n  $: width, height, pixelRatio, autoclear, resize(), redraw();\n</script>\n\n<style>\n  canvas {\n    display: block;\n  }\n</style>\n\n<canvas\n  style=\"width: {width}px; height: {height}px;{style ? ` ${style}` : ''}\"\n  width={width * pixelRatio}\n  height={height * pixelRatio}\n  bind:this={canvas}\n  use:forwardEvents />\n<slot />\n","<script>\n  import { getContext } from 'svelte';\n  import { KEY } from './Canvas.svelte';\n\n  const { register, redraw, priorityChange } = getContext(KEY);\n\n  export let setup = undefined,\n    render = () => {},\n    priority = undefined;\n\n  if (typeof setup !== 'function' && setup !== undefined) {\n    throw new Error('setup must be a function');\n  }\n\n  if (typeof render !== 'function') {\n    throw new Error('render must be a function');\n  }\n\n  if (priority && (!Number.isInteger(priority) || priority <= 0)) {\n    throw new Error('priority must be a positive integer');\n  }\n\n  register({ setup, renderer: { render, priority: () => priority } });\n\n  $: priority, priorityChange();\n  $: priority, render, redraw();\n</script>\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = [];\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (let i = 0; i < subscribers.length; i += 1) {\n                    const s = subscribers[i];\n                    s[1]();\n                    subscriber_queue.push(s, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.push(subscriber);\n        if (subscribers.length === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            const index = subscribers.indexOf(subscriber);\n            if (index !== -1) {\n                subscribers.splice(index, 1);\n            }\n            if (subscribers.length === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { readable } from 'svelte/store';\n\nlet frame;\n\nconst now = Date.now();\n\nfunction start(set) {\n  set(Date.now() - now);\n\n  frame = window.requestAnimationFrame(() => start(set));\n  return () => window.cancelAnimationFrame(frame);\n}\n\nfunction noop() {}\n\nexport default readable(\n  Date.now() - now,\n  typeof window === 'undefined' ? noop : start\n);\n","<script>\n    import { Layer } from \"svelte-canvas\";\n    import { getContext } from 'svelte';\n\n    export let selected = false;\n    export let picked = false;\n    export let row;\n    export let column;\n    export let width;\n    export let height;\n    export let background;\n\n    const game = getContext('game');\n    const fieldNodeIdx = game.fieldNodeCollection.getFieldNodeIndex(row, column);\n\n    let fieldNode;\n\n    $: render = ({ context }) => {\n        const dx = column * width,\n              dy = row * height;\n\n        fieldNode = game.fieldNodeCollection.getFieldNodeByIndex(fieldNodeIdx);\n\n        if (background.complete) {\n            context.drawImage(background, dx, dy, width, height);\n        } else {\n            background.addEventListener('load', () => {\n                context.drawImage(background, dx, dy, width, height);\n            });\n        }\n\n        if (selected || picked) {\n            context.strokeStyle = \"#f00\";\n        } else {\n            context.strokeStyle = \"#000\";\n        }\n\n        context.strokeRect(dx, dy, width, height);\n\n        if (fieldNode.getTower()) {\n            context.strokeStyle = \"#000\";\n\n            context.beginPath();\n            context.arc(dx + (width / 2), dy  + (width / 2), width / 4, 0, 2 * Math.PI);\n            context.stroke();\n        }\n    }\n</script>\n\n<Layer {render} priority={(selected || picked) && 1} />\n","<script>\n    import { Layer } from \"svelte-canvas\";\n\n    export let dx, dy,\n               radius,\n               color,\n               priority;\n\n    $: render = ({ context }) => {\n        context.fillStyle = color;\n        context.beginPath();\n        context.arc(dx, dy, radius, 0, 2 * Math.PI);\n        context.fill();\n    }\n</script>\n\n<Layer {render} priority={parseInt(priority, 10)} />\n","<script>\n    import Circle from '../CanvasObjects/Circle.svelte';\n\n    export let column;\n    export let row;\n    export let nodeWidth;\n    export let nodeHeight;\n    export let color = '#f00';\n\n    column = parseInt(column, 10);\n    row = parseInt(row, 10);\n\n    const dx = (column + 0.5) * nodeWidth;\n    const dy = (row + 0.5) *  nodeHeight;\n</script>\n\n<Circle dx={dx} dy={dy} color={color} radius={nodeHeight / 2.5} priority=10 />\n","<script>\n    import { getContext } from 'svelte';\n    import { Layer } from 'svelte-canvas';\n\n    const nodeWidth = 20,\n          nodeHeight = 20;\n\n    const game = getContext('game');\n\n    $: render = ({ context }) => {\n        context.strokeStyle = '#0f0'\n        context.beginPath();\n        context.moveTo((game.minionSource['column'] + 0.5) * nodeWidth, (game.minionSource['row'] + 0.5) * nodeHeight);\n        for (let i = 0; i < game.path.length; i++) {\n            context.lineTo((game.path[i]['column'] + 0.5) * nodeWidth, (game.path[i]['row'] + 0.5) * nodeWidth);\n        }\n\n        context.stroke();\n    };\n</script>\n\n<Layer render={render} priority={5} />\n","<script>\n    import Circle from '../CanvasObjects/Circle.svelte';\n\n    export let column;\n    export let row;\n    export let nodeWidth;\n    export let nodeHeight;\n    export let color = '#00f';\n\n    column = parseInt(column, 10);\n    row = parseInt(row, 10);\n\n    const dx = (column + 0.5) * nodeWidth;\n    const dy = (row + 0.5) *  nodeHeight;\n</script>\n\n<Circle dx={dx} dy={dy} color={color} radius={nodeHeight / 2.5} priority=10 />\n","<script>\n    import Circle from '../CanvasObjects/Circle.svelte';\n    export let minion;\n\n    let dx = 20;\n    let dy = 20;\n\n    $: dx = minion['position']['dx'];\n    $: dy = minion['position']['dy'];\n</script>\n\n<Circle dx={dx} dy={dy} color=\"#ff0\" radius=2 priority=30 />\n","<script>\n    import Minion from './Minion.svelte';\n    import { getContext } from 'svelte';\n    import { t } from 'svelte-canvas';\n\n    const game = getContext('game');\n    const minions = game.minionCollection.minions;\n\n    t.subscribe(() => {\n        game.minionCollection.update();\n    });\n</script>\n\n{#each $minions as minion}\n    <Minion minion={minion} />\n{/each}\n","<script>\n    import { Layer } from 'svelte-canvas';\n\n    export let color = 'hsl(0, 0%, 100%)';\n    export let align = 'center';\n    export let baseline = 'middle';\n\n    export let text = '';\n    export let dx = 0;\n    export let dy = 0;\n\n    export let priority = 5;\n\n    export let fontSize = 16;\n    export let fontFamily = '-apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica';\n\n    $: render = ({ context }) => {\n        if (text) {\n            context.fillStyle = color;\n            context.font = `${fontSize}px ${fontFamily}`;\n            context.textAlign = align;\n            context.textBaseline = baseline;\n            context.fillText(text, dx, dy);\n        }\n    }\n</script>\n\n<Layer {render} priority={parseInt(priority, 10)} />\n","<script>\n    import Text from '../CanvasObjects/Text.svelte';\n    import { t } from 'svelte-canvas';\n\n    let text = '';\n\n    let elapsed = 0;\n    let frames = 0;\n    let prevTime = $t;\n\n    $: text = $t && getText();\n\n    const getText = function() {\n        let time = $t;\n\n        frames++;\n        if (time >= prevTime + 1000) {\n            const fps = ((frames * 1000) / (time - prevTime));\n            text = `${fps.toFixed(1)} FPS`;\n            prevTime = time;\n            frames = 0;\n        }\n\n        return text;\n    };\n</script>\n\n<Text text={text} fontSize=12 fontFamily='Courier New' align='left' baseline='top' dy={20} dx={20} />\n","import { writable } from 'svelte/store';\n\nexport const stateStore = writable({\n    'activeMenu': 'none',\n    'pickedNode': {\n        'row': null,\n        'column': null,\n    },\n    'nodeCollection': null,\n});\n\nstateStore['updateValue'] = (name, value) => {\n    stateStore.update(s => {\n        s[name] = value;\n\n        return s;\n    });\n}\n","import { writable, get } from 'svelte/store';\n\nexport class FieldNode {\n    constructor(row, column) {\n        this.row = row;\n        this.column = column;\n\n        this._tower = writable();\n    }\n\n    setTower(tower) {\n        this._tower.set(tower);\n    }\n\n    getTower() {\n        return get(this._tower);\n    }\n}\n","import { FieldNode } from './FieldNode.js';\n\nexport class FieldNodeCollection {\n    /**\n     * @param {int} rows - Total rows of the current collection\n     * @param {int} columns - Total columns of the current collection\n     */\n    constructor(rows, columns) {\n        this.rows = rows;\n        this.columns = columns;\n        this.fieldNodes = [];\n\n        this._createFieldNodes();\n    }\n\n    /**\n     * Get the field node at specific row and column\n     *\n     * @param {int} row\n     * @param {int} column\n     *\n     * @return {(FieldNode|null)}\n     */\n    getFieldNode(row, column) {\n        const idx = this.getFieldNodeIndex(row, column);\n\n        if (idx < 0 || idx >= this.columns * this.rows) {\n            return null;\n        }\n\n        return this.getFieldNodeByIndex(idx);\n    }\n\n    getFieldNodeByIndex(idx) {\n        return this.fieldNodes[idx];\n    }\n\n    getFieldNodeIndex(row, column) {\n        return (row * this.columns) + column;\n    }\n\n    /**\n     * Get all field nodes as plain array\n     *\n     * @return {FieldNode[]}\n     */\n    getFieldNodes() {\n        return this.fieldNodes;\n    }\n\n    _createFieldNodes() {\n        for (let i = 0; i < this.columns; i++) {\n            for (let j = 0; j < this.rows; j++) {\n                this.fieldNodes.push(new FieldNode(i, j));\n            }\n        }\n    }\n}\n","<script>\n    import FieldNode from './FieldNode.svelte';\n    import MinionSource from '../Minions/MinionSource.svelte';\n    import MinionPath from './MinionPath.svelte';\n    import MinionSink from '../Minions/MinionSink.svelte';\n    import MinionLayer from '../Minions/MinionLayer.svelte';\n    import FPS from '../Game/FPS.svelte';\n    import { Canvas } from \"svelte-canvas\";\n    import { stateStore } from '../Stores/state_store.js';\n    import { FieldNodeCollection } from '../Core/Field/FieldNodeCollection.js';\n    import { getContext } from 'svelte';\n\n\n    const game = getContext('game');\n\n    const nodeWidth = game['nodeWidth'],\n          nodeHeight = game['nodeHeight'];\n    const width = game.columns * nodeWidth,\n          height = game.rows * nodeHeight;\n\n    let selected = {\n        'row': null,\n        'column': null\n    }, picked = selected;\n\n    const watch = stateStore.subscribe(s => {\n        if (!s['pickedNode']) {\n            picked['row'] = picked['column'] = null;\n\n            return;\n        }\n\n        if (picked['row'] !== s['pickedNode']['row']) {\n            picked['row'] = s['pickedNode']['row'];\n        }\n\n        if (picked['column'] !== s['pickedNode']['column']) {\n            picked['column'] = s['pickedNode']['column'];\n        }\n    });\n\n    const background = new Image();\n    background.src = \"gfx/field.png\";\n</script>\n\n<Canvas width={width} height={height}\n        on:mousemove={({ clientX: x, clientY: y }) => {\n            selected['row'] = Math.min(parseInt(y / nodeHeight, 10), game.rows - 1);\n            selected['column'] = Math.min(parseInt(x / nodeWidth, 10), game.columns - 1);\n        }}\n        on:mouseout={() => selected['row'] = selected['column'] = null}\n        on:mousedown={() => {\n            picked = selected;\n\n            stateStore.update(s => {\n                s['activeMenu'] = 'build';\n                s['pickedNode']['row'] = picked['row'];\n                s['pickedNode']['column'] = picked['column'];\n\n                return s;\n            });\n        }}\n    >\n    {#each game.fieldNodeCollection.getFieldNodes() as { row, column }, i}\n        <FieldNode\n            width={nodeWidth}\n            height={nodeHeight}\n            row={row}\n            column={column}\n            selected={selected['row'] === row && selected['column'] === column}\n            picked={picked['row'] === row && picked['column'] === column}\n            background={background}\n        />\n    {/each}\n\n    <MinionSource row={game['minionSource']['row']} column={game['minionSource']['column']} nodeWidth={nodeWidth} nodeHeight={nodeHeight} />\n    <MinionSink row={game['minionSink']['row']} column={game['minionSink']['column']} nodeWidth={nodeWidth} nodeHeight={nodeHeight} />\n\n    <MinionLayer />\n\n    <MinionPath />\n\n    <FPS />\n</Canvas>\n","<script>\n    import { stateStore } from '../Stores/state_store.js';\n    import { getContext } from 'svelte';\n\n    export let row;\n    export let column;\n\n    const game = getContext('game');\n\n    function handleCreateTower() {\n        game.buildTower(row, column);\n    }\n</script>\n\n<p>\n    Build Menu for {row} {column}\n    <button\n        on:mousedown={handleCreateTower}\n    >Create Tower</button>\n</p>\n","<script>\n    import { stateStore } from '../Stores/state_store.js';\n    import BuildMenu from './BuildMenu.svelte';\n    import { getContext } from 'svelte';\n\n    let activeMenu = 'none';\n    let pickedNode = null;\n\n    const game = getContext('game');\n\n    const watch = stateStore.subscribe(s => {\n        if (s['activeMenu'] !== activeMenu) {\n            activeMenu = s['activeMenu'];\n        }\n\n        pickedNode = s['pickedNode'];\n    });\n\n    function handleCloseMenuClick () {\n        stateStore.update(function (s) {\n           s['activeMenu'] = 'none';\n           s['pickedNode']['row'] = null;\n           s['pickedNode']['column'] = null;\n           return s;\n       });\n    }\n\n    function handleCreateMinion () {\n        game.minionCollection.createMinion('test');\n    }\n</script>\n\n<div class=\"menu\">\n    {#if activeMenu === 'build'}\n        <BuildMenu row={pickedNode['row']} column={pickedNode['column']} />\n    {:else}\n        Kein Menü\n        <button on:mousedown={handleCreateMinion}>Minion erstellen</button>\n    {/if}\n\n    {#if activeMenu !== 'none'}\n        <span class=\"close-menu\"\n              on:click={handleCloseMenuClick}>\n            &#x2715;\n        </span>\n    {/if}\n</div>\n\n<style>\n    .menu {\n        position: relative;\n        padding: 10px;\n        border: 1px solid #000;\n    }\n\n    .close-menu {\n        position: absolute;\n        top: 10px;\n        right: 10px;\n        display: inline-block;\n        height: 16px;\n        width: 16px;\n        line-height: 16px;\n        border: 3px solid #000;\n        background: red;\n        text-align: center;\n        cursor: pointer;\n    }\n\n    .close-menu:hover {\n        border-color: #eee;\n    }\n</style>\n","export class Vector {\n    constructor(coordinates) {\n        this.dx = coordinates['dx'];\n        this.dy = coordinates['dy'];\n    }\n\n    rescale(factor) {\n        this.dx *= factor;\n        this.dy *= factor;\n\n        return this;\n    }\n\n    add(otherVector) {\n        this.dx += otherVector['dx'];\n        this.dy += otherVector['dy'];\n\n        return this;\n    }\n\n    shift(offset) {\n        this.dx += offset;\n        this.dy += offset;\n\n        return this;\n    }\n\n    clone() {\n        return new Vector(this);\n    }\n}\n","import { Vector } from '../Math/Vector.js';\n\nexport class Minion {\n    constructor(path) {\n        this.velocity = 1;\n        this.waypointIdx = 0;\n        this.shift = parseInt(Math.random() * 20, 10);\n\n        this.path = [...path.map(waypoint => waypoint.clone().shift(this.shift) )];\n        this.position = this.path[0].clone();\n    }\n\n    update() {\n        // TODO: Currently this actually enables diagonal movement\n        //       which is needed if the path cannot be found\n        // TODO: Implement some rounding to enable non integer movement\n        // TODO: Rework the waypoint logic with some pop algorithm, in order to remove\n        //       the waypoint index stuff\n        const waypoint = this.path[this.waypointIdx] || this.path[this.path.length - 1];\n\n        const velocity = new Vector({'dx': 0, 'dy': 0});\n        if (this.position['dx'] < waypoint['dx']) {\n            velocity['dx'] = 1;\n        } else if (this.position['dx'] < waypoint['dx']) {\n            velocity['dx'] = -1;\n        }\n\n        if (this.position['dy'] < waypoint['dy']) {\n            velocity['dy'] = 1;\n        } else if (this.position['dy'] < waypoint['dy']) {\n            velocity['dy'] = -1;\n        }\n\n        this.position.add(velocity);\n\n        if ((velocity['dx'] > 0 && this.position['dx'] >= waypoint['dx'])\n            || (velocity['dx'] < 0 && this.position['dx'] <= waypoint['dx'])\n            || (velocity['dy'] > 0 && this.position['dy'] >= waypoint['dy'])\n            || (velocity['dy'] < 0 && this.position['dy'] <= waypoint['dy']) || (velocity['dx'] == 0 && velocity['dy'] == 0)\n        ) {\n            this.waypointIdx += 1;\n        }\n    }\n\n    getVelocity() {\n        return 1;\n    }\n}\n","import { writable } from 'svelte/store';\nimport { Minion } from './Minion.js';\n\nexport class MinionCollection {\n    constructor(minionSource, minionSink) {\n        this.minionSource = minionSource;\n        this.minionSink = minionSink;\n\n        this.minions = writable([]);\n        this.path = null;\n    }\n\n    createMinion(minionType) {\n        const path = this.path;\n\n        this.minions.update(function (s) {\n            // TODO: Create different types\n            s.push(new Minion(path));\n\n            return s;\n       });\n    }\n\n    update() {\n        const path = this.path;\n\n        this.minions.update(function (s) {\n            s.forEach((minion) => {\n                minion.update();\n            });\n\n            return s;\n        });\n    }\n}\n","import { FieldNodeCollection } from './Field/FieldNodeCollection.js';\nimport { MinionCollection } from './Minion/MinionCollection.js';\nimport { Vector } from './Math/Vector.js';\n\nexport class Game {\n    constructor(rows, columns, minionSource, minionSink) {\n        this.nodeWidth = 20;\n        this.nodeHeight = 20;\n\n        this.rows = rows;\n        this.columns = columns;\n        this.fieldNodeCollection = new FieldNodeCollection(this.rows, this.columns);\n\n        this.minionSource = minionSource;\n        this.minionSink = minionSink;\n        this.minionCollection = new MinionCollection(this.minionSource, this.minionSink);\n\n        this.occupiedNodes = Array(rows);\n        for (let i = 0; i < rows; i++) {\n            this.occupiedNodes[i] = Array(columns).fill(false);\n        }\n\n        this.computePath();\n    }\n\n    buildTower(row, column, towerType='test') {\n        const fieldNode = this.fieldNodeCollection.getFieldNode(row, column);\n\n        if (!fieldNode) {\n            // TODO: Handle not existing field node, maybe just do nothing?\n            return;\n        }\n\n        // TODO: Handle already built tower, menu should actually not be visible\n        if (this.occupiedNodes[row][column]) {\n            return;\n        }\n\n        fieldNode.setTower(towerType);\n        this.occupiedNodes[row][column] = true;\n        this.computePath();\n    }\n\n    computePath() {\n        const source = {...this.minionSource},\n              sink = {...this.minionSink};\n\n        let step = source;\n        const path = [{...this.minionSource}];\n\n        // TODO: There are still several cases where no path can be found, this is currently not covered,\n        //       some kind of backward walking of the current path and removing elements\n        let stepCounter = 0;\n        while (step['row'] !== sink['row'] && step['column'] !== sink['column'] && stepCounter < 1000) {\n            let smallestDistance = null,\n                smallestStep = null,\n                currentDistance = null;\n\n            // Iterate over all 4 possible directions and find the smallest distance\n            for (let i = 0; i < 4; i++) {\n                const currentStep = this.getStep(step, i);\n                currentDistance = this.getDistance(currentStep, sink);\n\n                if (!this.occupiedNodes[currentStep['row']][currentStep['column']] && (!smallestDistance || currentDistance < smallestDistance)) {\n                    smallestStep = {...currentStep};\n                    smallestDistance = currentDistance;\n                }\n            }\n\n            if (!smallestStep) {\n                throw `Cannot find path at step {row = ${step['row']}, column = ${step['column']}}`;\n            }\n\n            path.push({...smallestStep});\n            step = smallestStep;\n\n            stepCounter += 1;\n        }\n\n        path.push({...this.minionSink});\n\n        this.path = path;\n        this.minionCollection.path = path.map(step =>\n            (new Vector({'dx': step['column'] * this.nodeWidth, 'dy': step['row'] * this.nodeHeight}))\n        );\n    }\n\n    getDistance(a, b) {\n        return Math.sqrt(Math.abs(a['row'] - b['row'])**2 + Math.abs(a['column'] - b['column'])**2)\n    }\n\n    getStep(currentPosition, direction) {\n        if (direction === 0) {  // right\n            return {'row': currentPosition['row'] + 1, 'column': currentPosition['column']};\n        } else if (direction === 1) {  // bottom\n            return {'row': currentPosition['row'], 'column': currentPosition['column'] + 1};\n        } else if (direction === 2) {  // left\n            return {'row': currentPosition['row'] - 1, 'column': currentPosition['column']};\n        } else if (direction === 3) { // top\n            return {'row': currentPosition['row'], 'column': currentPosition['column'] - 1};\n        }\n\n        throw `Cannot find step for direction ${direction}`;\n    }\n}\n","<script lang=\"ts\">\n    import { setContext } from 'svelte';\n\n    import Field from './Field/Field.svelte';\n    import Menu from './Menu/Menu.svelte';\n    import { Game } from './Core/Game.js';\n\n    const game = new Game(20, 20, {'row': 4, 'column': 3}, {'row': 13, 'column': 17});\n\n    setContext('game', game);\n</script>\n\n<main>\n    <Field />\n    <Menu />\n</main>\n","import App from './App.svelte';\nconst app = new App({\n    target: document.body,\n    props: {}\n});\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","subscribe","store","callbacks","unsub","unsubscribe","component_subscribe","component","callback","$$","on_destroy","push","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","update_slot","slot","slot_definition","dirty","get_slot_changes_fn","get_slot_context_fn","slot_changes","lets","undefined","merged","len","Math","max","length","i","get_slot_changes","slot_context","p","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","current_component","set_current_component","get_current_component","Error","setContext","key","context","set","getContext","get","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","update","pop","has","add","clear","fragment","before_update","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","on_mount","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","Map","skip_bound","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","$$props","obj","$$set","keys","events","slot_ctx","action_result","destroy","KEY","forwardEvents","destructors","e","bubble","forwardEventsBuilder","canvas","redrawNeeded","resizeNeeded","resortNeeded","setups","renderers","prioritized","width","height","pixelRatio","style","autoclear","redraw","priorityChange","draw","scale","renderer","rank","priority","sort","setup","clearRect","render","window","requestAnimationFrame","register","devicePixelRatio","Number","isInteger","subscriber_queue","writable","start","stop","subscribers","new_value","run_queue","s","invalidate","subscriber","frame","now","Date","readable","cancelAnimationFrame","selected","picked","row","column","background","game","fieldNodeIdx","fieldNodeCollection","getFieldNodeIndex","fieldNode","dx","dy","getFieldNodeByIndex","complete","drawImage","strokeStyle","strokeRect","getTower","beginPath","arc","PI","stroke","parseInt","radius","color","fillStyle","nodeWidth","nodeHeight","moveTo","minionSource","path","lineTo","minion","minions","minionCollection","t","align","baseline","fontSize","fontFamily","font","textAlign","textBaseline","fillText","frames","prevTime","$t","time","toFixed","getText","stateStore","activeMenu","pickedNode","nodeCollection","FieldNode","_tower","tower","_","FieldNodeCollection","rows","columns","fieldNodes","_createFieldNodes","idx","j","getFieldNodes","Image","clientX","x","clientY","y","min","buildTower","createMinion","Vector","coordinates","factor","otherVector","offset","Minion","velocity","waypointIdx","shift","random","waypoint","clone","position","MinionCollection","minionSink","minionType","Game","occupiedNodes","computePath","towerType","getFieldNode","setTower","source","sink","step","stepCounter","smallestDistance","smallestStep","currentDistance","currentStep","getStep","getDistance","sqrt","abs","currentPosition","direction","body"],"mappings":"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"}